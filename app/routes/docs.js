// Generated by CoffeeScript 1.6.2
(function() {
  var Docs, Rest,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Rest = require("./rest");

  Docs = (function(_super) {
    var Sticker, _ref;

    __extends(Docs, _super);

    Sticker = (function(_super1) {
      __extends(Sticker, _super1);

      function Sticker() {
        _ref = Sticker.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Sticker.prototype.read = function(read, res) {
        return res.send("sticker is here!");
      };

      Sticker.prototype.create = function(read, res) {
        return res.send("sticker is here!");
      };

      return Sticker;

    })(Rest);

    function Docs(app, prefix) {
      this.app = app;
      this.prefix = prefix;
      this.sticker = new Sticker(this.app, "" + this.prefix + "/sticker");
      Docs.__super__.constructor.call(this, this.app, this.prefix);
    }

    Docs.prototype.read = function(req, res) {
      return res.send("docs::read");
    };

    Docs.prototype.create = function(req, res) {
      return res.send("docs::create");
    };

    Docs.prototype.update = function(req, res) {
      return res.send("docs::update");
    };

    Docs.prototype["delete"] = function(req, res) {
      return res.send("docs::delete");
    };

    Docs.prototype.readid = function(req, res) {
      console.log("i am here :)");
      return res.send("docs::readid" + req.params.id);
    };

    Docs.prototype.createid = function(req, res) {
      console.log("i am here :)");
      return res.send("docs::createid" + req.params.id + "\n");
    };

    return Docs;

  })(Rest);

  exports.Docs = Docs;

}).call(this);
