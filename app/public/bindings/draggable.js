// Generated by CoffeeScript 1.6.2
(function() {
  ko.bindingHandlers.draggable = {
    init: function(element, valueAccessor) {
      var $element, callback, condition, exnum, mousemove, mouseup, util,
        _this = this;

      $element = $(element);
      $element.addClass("draggable");
      callback = valueAccessor().callback;
      condition = valueAccessor().condition;
      util = {
        startX: 0,
        startY: 0,
        offsetX: 0,
        offsetY: 0,
        dragElement: null,
        oldZIndex: 0
      };
      exnum = function(n) {
        n = parseInt(n);
        if (n !== null) {
          return n;
        }
        if (isNaN(n)) {
          return 0;
        }
        return n;
      };
      mousemove = function(e) {
        var zoom;

        console.log(util.offsetX + e.clientX - util.startX, util.offsetY + e.clientY - util.startY);
        zoom = parseFloat($element.css("zoom"));
        element.style.left = (util.offsetX + (e.clientX - util.startX) / zoom) + 'px';
        element.style.top = (util.offsetY + (e.clientY - util.startY) / zoom) + 'px';
        return callback(util.offsetX + e.clientX - util.startX, util.offsetY + e.clientY - util.startY);
      };
      mouseup = function(e) {
        console.log("up");
        document.onmousemove = null;
        return document.onmouseup = null;
      };
      $element.mousedown(function(e) {
        if (e.button !== 0) {
          return;
        }
        if (!condition()) {
          return;
        }
        console.log("down");
        $(":focus").blur();
        util.startX = e.clientX;
        util.startY = e.clientY;
        util.offsetX = parseInt(String(element.style.left).replace(/[^0-9-\.]/g, "")) || 0;
        util.offsetY = parseInt(String(element.style.top).replace(/[^0-9-\.]/g, "")) || 0;
        console.log(util.offsetX, util.offsetY);
        document.onmousemove = mousemove;
        document.onmouseup = mouseup;
        document.body.focus();
        mousemove(e);
        return false;
      });
      return $element.mouseup(mouseup);
    }
  };

}).call(this);
